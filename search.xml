<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>动态数组自增策略的复杂度分析</title>
      <link href="/2018/07/10/%E5%8A%A8%E6%80%81%E6%95%B0%E7%BB%84%E8%87%AA%E5%A2%9E%E7%AD%96%E7%95%A5%E7%9A%84%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%88%86%E6%9E%90/"/>
      <url>/2018/07/10/%E5%8A%A8%E6%80%81%E6%95%B0%E7%BB%84%E8%87%AA%E5%A2%9E%E7%AD%96%E7%95%A5%E7%9A%84%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%88%86%E6%9E%90/</url>
      <content type="html"><![CDATA[<p>由于编程时很难准确预知需要多少空间。比如申请了一个定长的数组存放数据，但是突然发现数组填满了，因此需要一个更大的数组来填放数据，这就涉及了数组的自增策略问题。</p><h3 id="定增策略"><a href="#定增策略" class="headerlink" title="定增策略"></a>定增策略</h3><p>定增策略每次扩容将数组长度增加定长。设我们需要一个长为$n$的数组，数组初始长度为$I$，每次扩容的大小为$I$，则$n=(m+1)I$,$m$为扩容次数。第一次扩容需要一块$2I$长度的数组空间来存放新的数组，此时，原数组复制到新数组空间需要$O(I)$的时间。而当$2I$长度的数组再次用完后，又需要申请一个长度为$3I$的新数组，并且再将长度为$2I$的原数组复制到新数组，此时，需要的时间为$O(2I)$。</p><p>若将申请空间的时间忽略不计，在使用定增策略时，我们每次扩容需要的时间代价分别为</p><p>$I,2I,3I,…,mI$</p><p>算术级数求和得：</p><p>$总时间=\frac{I(m+1)m}{2}$</p><p>由于$n=(m+1)I$，$I为常数$，因此$n$与$m$同阶。$总时间=\frac{n^2-nI}{2I}$，即得定增策略得到长度为$n$的数组的时间复杂度为$O(n^2)$。分摊到每个向数组存放数据的操作时，分摊复杂度为$O(n)$。</p><h3 id="倍增策略"><a href="#倍增策略" class="headerlink" title="倍增策略"></a>倍增策略</h3><p>倍增策略每次将当前长度翻倍，若我们需要一个长度为$n$的数组，数组长度初始为$I$，每次扩容将数组长度变成两倍，则$n=2^mI$，$m$为扩容次数。同样的，主要的时间会花费在将原数组数据复制到新数组的过程中。第一次花费$I$，第二次花费$2I$，每次乘2，以此类推。</p><p>同样将申请空间的时间忽略不计，在使用倍增策略时，每次扩容需要的时间代价分别为</p><p>$I,2I,4I,8I,…,2^mI$</p><p>几何级数求和得：</p><p>$总时间=I(2^m-1)=2^mI-I=n-I$</p><p>由于$I$为常数，所以使用倍增策略时，得到长度为$n$的数组需要的时间复杂度为$O(n)$。分摊到每个向数组存放数据的操作时，分摊复杂度为$O(1)$。</p><h3 id="装填因子分析"><a href="#装填因子分析" class="headerlink" title="装填因子分析"></a>装填因子分析</h3><p>定增策略中由于增量$I$为常数，而不断扩容时$n$远大于$I$，所以定长策略的装填因子无限接近100%。</p><p>倍增策略中最坏情况就是刚扩容就停止存入数据了，因此倍增策略中装填因子大于50%。</p><p>有意思的是，倍增策略并不一定只能乘2，比如每次扩容都变成原数组长度的1.5倍，那么</p><p>$I,1.5I,2.25I,…,1.5^mI$</p><p>仍是几何级数，此时总的时间复杂度还是$O(n)$,分摊到每次存入数据的分摊时间复杂度仍为$O(1)$，但是，1.5倍的倍增策略的装填因子提高到了至少66.66%。需要注意的是，取到的倍数不能太接近1，也不能比1大太多，这样才可以同时兼顾到时间和空间。</p><p>不同的动态数组空间管理就是时间与空间的兑换，在考虑使用哪种策略时，要多考虑时间与空间的折衷方案。</p>]]></content>
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学 </tag>
            
            <tag> 编程 </tag>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>在Coursera上学习</title>
      <link href="/2018/04/30/%E5%9C%A8Coursera%E4%B8%8A%E5%AD%A6%E4%B9%A0/"/>
      <url>/2018/04/30/%E5%9C%A8Coursera%E4%B8%8A%E5%AD%A6%E4%B9%A0/</url>
      <content type="html"><![CDATA[<p>我从大二就开始在网上看MOOC的课程了，有趣的是我从来没有真正完整地完成一门我选择的课程。原因当然是多方面的，一方面是因为我从前仅仅只把MOOC当作学校课程的补充，另一方面就是因为自己太懒了。</p><p>大四之后已经很久没关注过各类MOOC平台了，感觉自己仿佛已经不需要学那些东西了一样。但是偶然间发现大一的时候加入的码农群“我们爱编程”的群主—X神，已经在Coursera上完成了十余门课程的学习了，涵盖从编程语言到理论与算法的内容。不得不佩服大佬的执行力。</p><p>而且我还得到了另一个好消息，那就是X神已经拿到了Amazon的Offer，今年六月份就人肉翻墙去美国了。这还是在川普上台后H1B签证紧缩的时候拿到的。X神确实比三年前又更强了。X神研究生毕业后工作五年拿到Offer，年龄大概在29到30岁，这么年轻就可以去海外搞代购了，简直是人生赢家啊。</p><p>不过这也给我提供了一些思路，很多时候想继续快速进步就不能仅仅依靠当前环境下的工作和学习。像X神一样在每天下班后在Coursera上课也是很不错的，毕竟Coursera云集全世界各大名校的优秀课程，有很多课程的容量和要求声称能达到本校学生同样的程度，就如我选的一门普林斯顿的Computer Architecture中讲到：</p><blockquote><p>So in this course we’re trying to have a high quality course similar to what we have at Princeton.And this course is going to be rigorous, so we’re going to use good text books, have hard problems, have a hard midterm and a hard final. Now the tradeoff here is that because this course is going to be rigorous you’re going to learn a lot and it’s going to be very rewarding.</p></blockquote><p>不得不说，我喜欢去做一些有挑战性的东西，因此这些话让这门课对我有了极大的吸引力。这门课的容量有11周，每周的学时平均达到了5小时，再考虑到做Reading的时候可能遇到的语言障碍，难度还是相当大的，我会在毕业之前完成这门课。另外还有选修的北大的离散数学概论，老师讲课的容量挺不错，我也会同期完成。</p><p>今天是4.30号，明天就飞回长沙了，去学校报个到，然后回家一趟。主要是要吃好吃的啊，中关村这破地方感觉没啥合我胃口的东西，这几个月吃饭吃得我浑身难受。</p>]]></content>
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> 生活 </tag>
            
            <tag> Coursera </tag>
            
            <tag> MOOC </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>第一篇</title>
      <link href="/2018/04/22/%E7%AC%AC%E4%B8%80%E7%AF%87/"/>
      <url>/2018/04/22/%E7%AC%AC%E4%B8%80%E7%AF%87/</url>
      <content type="html"><![CDATA[<p>第一篇文章写点什么好呢???</p><p>还是什么都不写比较好吧。。</p>]]></content>
      
      
    </entry>
    
  
  
    
    <entry>
      <title></title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      <content type="html"><![CDATA[]]></content>
    </entry>
    
    <entry>
      <title></title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      <content type="html"><![CDATA[]]></content>
    </entry>
    
  
</search>
